"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""

# a = int(input("Введите первое значение:"))
# b = int(input("Введите первое значение:"))
#
#
# def dev(a, b):
#     try:
#         return a/b
#     except ZeroDivisionError:
#         return "Деление на ноль невозможно"
#
#
# print(my_func(a, b))

"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Реализовать вывод данных о пользователе одной строкой.
"""


# def person_info1(**kwargs):
#     return f"имя: {kwargs['name']}, фамилия: {kwargs['surname']}," \
#            f"год рождения: {kwargs['birth_year']}, город проживания: {kwargs['city']}" \
#            # f" email: {kwargs['email']}, телефон: {kwargs['phone_number']}"
#
#
# print(person_info1(name="AA", surname="aaa", birth_year=123, city="NNN", email="hh", phone_number=123123))


# name = input("Введите Ваше имя: ")
# surname = input("Введите Вашу фамилию: ")
# birth_year = input("Введите Ваш год рождения: ")
# city = input("Введите Ваш город проживания: ")
# email = input("Введите Ваш email: ")
# phone_number = input("Введите Ваш номер телефона: ")
#
#
# def person_info(name, surname, birth_year, city, email, phone_number):
#     return f"имя: {name}, фамилия: {surname}," \
#            # f"год рождения: {birth_year}, город проживания: {city}" \
#            # f" email: {email}, телефон: {phone_number}"
#
#
# print(person_info(name, surname, birth_year, city, email, phone_number))

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.
"""


# def my_func(a, b, c):
#     my_list = [a, b, c]
#     my_list.sort(reverse=True)
#     return sum(my_list[:2])
#
#
# print(my_func(1, 2, 3))


"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. 
Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. 
Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


# def my_func(x, y):
#     return x**y
#
#
# print(my_func(2, -2))


# def my_func1(x, y):
#     if y > 0:
#         return
#     elif y == 0:
#         return 1
#     elif x <= 0:
#         return
#     else:
#         x_st_y = 1
#         while y < 0:
#             x_st_y = x_st_y * 1/x
#             y = y + 1
#         return x_st_y
#
#
# print(my_func1(2, -2))


# return 1/x*my_func1(x, y+1) //с помощью рукурсии
# print(result if result else "Данные введены некорректно") //тернарный оператор


"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""
#  Самой корректно не получается решить задачу. Взяла твой код.
#  Вроде все понятно, кроме второго блока с условием while. С флагами несовсем понятно, погуглю


# def sum_calc(input_string):
#     input_list = input_string.split(" ")
#     my_sum = 0
#     for el in input_list:
#         if el:
#             try:
#                 if el == "N":
#                     return my_sum, False
#                 else:
#                     my_sum += float(el)
#             except ValueError:
#                 continue
#     return my_sum, True
#
#
# continue_flag = True
# result_sum = 0
# while continue_flag:
#     input_string = input("Введите числа через пробел. Для остановки введите N: ")
#     current_sum, continue_flag = sum_calc(input_string)
#     result_sum += current_sum
#     print("Промежуточная сумма: ", result_sum)
# print("Результирующая сумма: ", result_sum)


"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().
"""


# def int_func(word):
#     return word.title()
#
#
# input_str = input("Введите предложение: ")
# my_list = []
# words = input_str.split(" ")
# for el in words:
#     my_list.append(int_func(el))
#
# print(" ".join(my_list))


